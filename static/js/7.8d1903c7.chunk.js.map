{"version":3,"file":"static/js/7.8d1903c7.chunk.js","mappings":"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","sources":["components/NotFound/NotFound.jsx","components/MovieCard/MovieCard.jsx","components/AditionalInformation/AditionalInformation.jsx","pages/MovieDetails.jsx","utils/message.js","utils/themoviedbApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nimport { Message } from 'utils/message';\n\nconst NotFound = ({ error }) => {\n  if (error) {\n    Message.failure(error.message);\n  }\n  Message.failure('Щось пішло не так, спробуйте перезавантажити сторінку');\n  return (\n    <>\n      <Link to=\"/\">Go back</Link>\n      <h2>Сторінку не знайдено</h2>\n    </>\n  );\n};\n\nexport default NotFound;\n","const MovieCard = ({ movie }) => {\n  const { title, release_date, vote_average, overview, genres } = movie;\n  return (\n    <div>\n      <h2>\n        {title}\n        {release_date !== '' ? (\n          <span> ({release_date.slice(0, 4)})</span>\n        ) : (\n          ''\n        )}\n      </h2>\n      <p>User Score: {Math.round(vote_average) * 10}%</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <div>\n        {Object.values(genres).map(({ name }) => (\n          <span key={name}>{name}</span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import { Suspense } from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\n\nconst AditionalInformation = () => {\n  return (\n    <>\n      <h4>Aditional information</h4>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Review</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default AditionalInformation;\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\n\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport AditionalInformation from 'components/AditionalInformation/AditionalInformation';\nimport { fetchImgsInstance } from 'utils/themoviedbApi';\nimport NotFound from 'components/NotFound/NotFound';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const { data } = await fetchImgsInstance.getMovieDetails(movieId);\n        console.log('Movie Detail:', data);\n\n        setMovie(data);\n      } catch (error) {\n        <NotFound error={error} />;\n      }\n    }\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkHref.current}>Go back</Link>\n      {movie && (\n        <>\n          <MovieCard movie={movie} />\n          <AditionalInformation />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import Notiflix from 'notiflix';\n\nexport const Message = {\n  success(message) {\n    Notiflix.Notify.success(message);\n  },\n\n  failure(message) {\n    Notiflix.Notify.failure(message);\n  },\n\n  warning(message) {\n    Notiflix.Notify.warning(message);\n  },\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.timeout = 1000;\n\nclass fetchImgs {\n  #AUTH_KEY =\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYmE2OTViZjhjZDk3YzJlZjFjMmE4YTIwN2E1MDc5MSIsInN1YiI6IjY0NzI1YzdiYmUyZDQ5MDBhN2Q1ZDBmMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lPU0wQ1y9n834eQ_fI0wPgzW-vuaEfLFb91z2AfAWd0';\n\n  options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: this.#AUTH_KEY,\n    },\n    params: {\n      language: 'en-US',\n    },\n  };\n\n  async getTrendingMovie() {\n    return await axios.get(`/trending/movie/day`, this.options);\n  }\n\n  async getSearchMovie(query) {\n    return await axios.get(\n      `/search/movie?query=${query}&include_adult=false&page=1`,\n      this.options\n    );\n  }\n\n  async getMovieDetails(id) {\n    return await axios.get(`/movie/${id}}`, this.options);\n  }\n\n  async getMovieCredits(id) {\n    return await axios.get(`/movie/${id}/credits`, this.options);\n  }\n\n  async getMovieReviews(id) {\n    return await axios.get(`/movie/${id}/reviews?page=1`, this.options);\n  }\n}\n\nexport const fetchImgsInstance = new fetchImgs();\n"],"names":["error","Message","message","to","movie","title","release_date","vote_average","overview","genres","slice","Math","round","Object","values","map","name","Suspense","fallback","movieId","useParams","useState","setMovie","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchImgsInstance","data","console","log","NotFound","fetchData","current","success","Notiflix","failure","warning","axios","fetchImgs","options","method","headers","accept","Authorization","this","params","language","query","id"],"sourceRoot":""}