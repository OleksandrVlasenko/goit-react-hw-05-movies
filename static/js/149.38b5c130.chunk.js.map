{"version":3,"file":"static/js/149.38b5c130.chunk.js","mappings":"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","sources":["components/MoviesListItem/MoviesListItem.styled.js","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","components/NotFound/NotFound.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","utils/message.js","utils/themoviedbApi.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const LinkStyled = styled(Link)`\n  display: block;\n`;\n","import { useLocation } from \"react-router-dom\";\nimport { LinkStyled } from \"./MoviesListItem.styled\";\n\nconst MoviesListItem = ({ title, id }) => {\n  const location = useLocation();\n  \n  return (\n    <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n      {title}\n    </LinkStyled>\n  );\n};\n\nexport default MoviesListItem;\n","import MoviesListItem from 'components/MoviesListItem/MoviesListItem';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(({ title, id }) => (\n        <MoviesListItem key={id} title={title} id={id} />\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { Link } from 'react-router-dom';\n\nimport { Message } from 'utils/message';\n\nconst NotFound = ({ error }) => {\n  if (error) {\n    Message.failure(error.message);\n  }\n  Message.failure('Щось пішло не так, спробуйте перезавантажити сторінку');\n  return (\n    <>\n      <Link to=\"/\">Go back</Link>\n      <h2>Сторінку не знайдено</h2>\n    </>\n  );\n};\n\nexport default NotFound;\n","import { useSearchParams } from \"react-router-dom\";\n\nimport { Message } from 'utils/message';\n\n\nconst SearchForm = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const updateQueryString = e => {\n    const query = e.target.value;\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (query.trim() === '') {\n      Message.warning('Введіть назву фільму');\n      return;\n    }\n    onSubmit(query.toLowerCase());\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"movie\"\n        autoFocus\n        placeholder=\"Search movies\"\n        autoComplete=\"on\"\n        value={query}\n        onChange={updateQueryString}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { useEffect, useRef, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { fetchImgsInstance } from 'utils/themoviedbApi';\nimport { Message } from 'utils/message';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport NotFound from 'components/NotFound/NotFound';\n\nconst Movies = () => {\n  const [incomingValue, setIncomingValue] = useState('');\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n  const queryRef = useRef(searchParams.get('query') ?? '');\n\n  useEffect(() => {\n    setIncomingValue(queryRef.current);\n  }, []);\n\n  useEffect(() => {\n    if (incomingValue === '') {\n      return;\n    }\n    async function fetchData() {\n      try {\n        const {\n          data: { results },\n        } = await fetchImgsInstance.getSearchMovie(incomingValue);\n\n        if (results.length === 0) {\n          Message.failure('По вашому запиту нічого не знайдено');\n          setSearchMovies([]);\n          return;\n        }\n\n        setSearchMovies(results);\n      } catch (error) {\n        <NotFound error={error} />\n      }\n    }\n\n    fetchData();\n  }, [incomingValue]);\n\n  return (\n    <>\n      <SearchForm onSubmit={setIncomingValue} />\n      <MoviesList movies={searchMovies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import Notiflix from 'notiflix';\n\nexport const Message = {\n  success(message) {\n    Notiflix.Notify.success(message);\n  },\n\n  failure(message) {\n    Notiflix.Notify.failure(message);\n  },\n\n  warning(message) {\n    Notiflix.Notify.warning(message);\n  },\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.timeout = 1000;\n\nclass fetchImgs {\n  #AUTH_KEY =\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYmE2OTViZjhjZDk3YzJlZjFjMmE4YTIwN2E1MDc5MSIsInN1YiI6IjY0NzI1YzdiYmUyZDQ5MDBhN2Q1ZDBmMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lPU0wQ1y9n834eQ_fI0wPgzW-vuaEfLFb91z2AfAWd0';\n\n  options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: this.#AUTH_KEY,\n    },\n    params: {\n      language: 'en-US',\n    },\n  };\n\n  async getTrendingMovie() {\n    return await axios.get(`/trending/movie/day`, this.options);\n  }\n\n  async getSearchMovie(query) {\n    return await axios.get(\n      `/search/movie?query=${query}&include_adult=false&page=1`,\n      this.options\n    );\n  }\n\n  async getMovieDetails(id) {\n    return await axios.get(`/movie/${id}}`, this.options);\n  }\n\n  async getMovieCredits(id) {\n    return await axios.get(`/movie/${id}/credits`, this.options);\n  }\n\n  async getMovieReviews(id) {\n    return await axios.get(`/movie/${id}/reviews?page=1`, this.options);\n  }\n}\n\nexport const fetchImgsInstance = new fetchImgs();\n"],"names":["LinkStyled","styled","Link","title","id","location","useLocation","to","state","from","movies","map","error","Message","message","onSubmit","useSearchParams","searchParams","setSearchParams","query","get","e","preventDefault","trim","toLowerCase","type","name","autoFocus","placeholder","autoComplete","value","onChange","target","useState","incomingValue","setIncomingValue","searchMovies","setSearchMovies","queryRef","useRef","useEffect","current","fetchImgsInstance","results","data","length","NotFound","fetchData","MoviesList","success","Notiflix","failure","warning","axios","fetchImgs","options","method","headers","accept","Authorization","this","params","language"],"sourceRoot":""}