{"version":3,"file":"static/js/247.0a42df0b.chunk.js","mappings":"sOAyCA,UAnCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+GAE2BC,EAAAA,EAAAA,gBAAkCN,GAF7D,gBAEYO,EAFZ,EAEYA,KACRC,QAAQC,IAAI,QAASF,EAAKJ,MAE1BC,EAAQG,EAAKJ,MALjB,gDAOK,UAAc,KAPnB,0DADc,uBAAC,WAAD,wBAYdO,EACD,GAAE,CAACV,KAGF,8BACGG,IACC,wBACGA,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAb,OACR,4BACE,wBAAKD,KACL,uCAAeC,OAFPF,EADF,OAUnB,C,2DCtBD,UAbiB,SAAC,GAAe,IAAbG,EAAY,EAAZA,MAKlB,OAJIA,GACFC,EAAAA,EAAAA,QAAgBD,EAAME,SAExBD,EAAAA,EAAAA,QAAgB,gSAEd,iCACE,SAAC,KAAD,CAAME,GAAG,IAAT,sBACA,6IAGL,C,4ECbYF,EAAU,CACrBG,QADqB,SACbF,GACNG,IAAAA,OAAAA,QAAwBH,EACzB,EAEDI,QALqB,SAKbJ,GACNG,IAAAA,OAAAA,QAAwBH,EACzB,EAEDK,QATqB,SASbL,GACNG,IAAAA,OAAAA,QAAwBH,EACzB,E,kICVHM,EAAAA,EAAAA,SAAAA,QADiB,+BAEjBA,EAAAA,EAAAA,SAAAA,QAAyB,IAAzB,0BAEMC,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,OAAAA,eAAAA,KAAAA,EAAAA,CAAAA,UAAAA,EAAAA,MAEF,oOAEFC,QAAU,CACRC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,eAAc,OAACC,KAAF,OAEfC,OAAQ,CACNC,SAAU,SAPJ,CA8BV,OA9BU,2EAWV,8FACeT,EAAAA,EAAAA,IAAA,sBAAiCO,KAAKL,SADrD,0IAXU,IAWV,+DAIA,WAAqBQ,GAArB,iFACeV,EAAAA,EAAAA,IAAA,8BACYU,EADZ,+BAEXH,KAAKL,SAHT,2IAJA,IAIA,gEAOA,WAAsBb,GAAtB,iFACeW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,KAA2BkB,KAAKL,SAD/C,2IAPA,IAOA,gEAIA,WAAsBb,GAAtB,iFACeW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,YAAkCkB,KAAKL,SADtD,2IAJA,IAIA,gEAIA,WAAsBb,GAAtB,iFACeW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,mBAAyCkB,KAAKL,SAD7D,2IAJA,MAIA,EAlCID,GAuCOlB,EAAoB,IAAIkB,C","sources":["components/Cast/Cast.jsx","components/NotFound/NotFound.jsx","utils/message.js","utils/themoviedbApi.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchImgsInstance } from 'utils/themoviedbApi';\nimport NotFound from '../NotFound/NotFound';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const { data } = await fetchImgsInstance.getMovieCredits(movieId);\n        console.log('Cast:', data.cast);\n\n        setCast(data.cast);\n      } catch (error) {\n        <NotFound error={error} />;\n      }\n    }\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <ul>\n          {cast.map(({ id, name, character }) => (\n            <div key={id}>\n              <h5>{name}</h5>\n              <p>Character: {character}</p>\n            </div>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { Link } from 'react-router-dom';\n\nimport { Message } from 'utils/message';\n\nconst NotFound = ({ error }) => {\n  if (error) {\n    Message.failure(error.message);\n  }\n  Message.failure('Щось пішло не так, спробуйте перезавантажити сторінку');\n  return (\n    <>\n      <Link to=\"/\">Go back</Link>\n      <h2>Сторінку не знайдено</h2>\n    </>\n  );\n};\n\nexport default NotFound;\n","import Notiflix from 'notiflix';\n\nexport const Message = {\n  success(message) {\n    Notiflix.Notify.success(message);\n  },\n\n  failure(message) {\n    Notiflix.Notify.failure(message);\n  },\n\n  warning(message) {\n    Notiflix.Notify.warning(message);\n  },\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.timeout = 1000;\n\nclass fetchImgs {\n  #AUTH_KEY =\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYmE2OTViZjhjZDk3YzJlZjFjMmE4YTIwN2E1MDc5MSIsInN1YiI6IjY0NzI1YzdiYmUyZDQ5MDBhN2Q1ZDBmMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lPU0wQ1y9n834eQ_fI0wPgzW-vuaEfLFb91z2AfAWd0';\n\n  options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: this.#AUTH_KEY,\n    },\n    params: {\n      language: 'en-US',\n    },\n  };\n\n  async getTrendingMovie() {\n    return await axios.get(`/trending/movie/day`, this.options);\n  }\n\n  async getSearchMovie(query) {\n    return await axios.get(\n      `/search/movie?query=${query}&include_adult=false&page=1`,\n      this.options\n    );\n  }\n\n  async getMovieDetails(id) {\n    return await axios.get(`/movie/${id}}`, this.options);\n  }\n\n  async getMovieCredits(id) {\n    return await axios.get(`/movie/${id}/credits`, this.options);\n  }\n\n  async getMovieReviews(id) {\n    return await axios.get(`/movie/${id}/reviews?page=1`, this.options);\n  }\n}\n\nexport const fetchImgsInstance = new fetchImgs();\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchImgsInstance","data","console","log","fetchData","map","id","name","character","error","Message","message","to","success","Notiflix","failure","warning","axios","fetchImgs","options","method","headers","accept","Authorization","this","params","language","query"],"sourceRoot":""}